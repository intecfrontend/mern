{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nexport default function RegisterPage() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  async function register(ev) {\n    ev.preventDefault();\n    const response = await fetch('http://localhost:4000/register', {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        password\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (response.status === 200) {\n      alert('registration successful');\n    } else {\n      alert('registration failed');\n    }\n  }\n  return {/* <form className=\"register\" onSubmit={register}>\n           <h1>Register</h1>\n           <input type=\"text\"\n                  placeholder=\"username\"\n                  value={username}\n                  onChange={ev => setUsername(ev.target.value)}/>\n           <input type=\"password\"\n                  placeholder=\"password\"\n                  value={password}\n                  onChange={ev => setPassword(ev.target.value)}/>\n           <button>Register</button>\n          </form> */};\n}\n_s(RegisterPage, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n_c = RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["useState","RegisterPage","_s","username","setUsername","password","setPassword","register","ev","preventDefault","response","fetch","method","body","JSON","stringify","headers","status","alert","_c","$RefreshReg$"],"sources":["/Users/ben/Desktop/mern/src/pages/RegisterPage.js"],"sourcesContent":["import {useState} from \"react\";\n\nexport default function RegisterPage() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  async function register(ev) {\n    ev.preventDefault();\n    const response = await fetch('http://localhost:4000/register', {\n      method: 'POST',\n      body: JSON.stringify({username,password}),\n      headers: {'Content-Type':'application/json'},\n    });\n    if (response.status === 200) {\n      alert('registration successful');\n    } else {\n      alert('registration failed');\n    }\n  }\n  return (\n    {/* <form className=\"register\" onSubmit={register}>\n      <h1>Register</h1>\n      <input type=\"text\"\n             placeholder=\"username\"\n             value={username}\n             onChange={ev => setUsername(ev.target.value)}/>\n      <input type=\"password\"\n             placeholder=\"password\"\n             value={password}\n             onChange={ev => setPassword(ev.target.value)}/>\n      <button>Register</button>\n    </form> */}\n  );\n}"],"mappings":";AAAA,SAAQA,QAAQ,QAAO,OAAO;AAE9B,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,eAAeO,QAAQA,CAACC,EAAE,EAAE;IAC1BA,EAAE,CAACC,cAAc,CAAC,CAAC;IACnB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;MAC7DC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACZ,QAAQ;QAACE;MAAQ,CAAC,CAAC;MACzCW,OAAO,EAAE;QAAC,cAAc,EAAC;MAAkB;IAC7C,CAAC,CAAC;IACF,IAAIN,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAE;MAC3BC,KAAK,CAAC,yBAAyB,CAAC;IAClC,CAAC,MAAM;MACLA,KAAK,CAAC,qBAAqB,CAAC;IAC9B;EACF;EACA,OACE,CAAC;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAXK,CAWU;AAEf;AAAChB,EAAA,CA9BuBD,YAAY;AAAAkB,EAAA,GAAZlB,YAAY;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}